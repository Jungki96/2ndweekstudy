
        경고창을 출력합니다.
        alert('alert()함수의 출력')
        콘솔에 출력합니다.
        console.log('console.log() 메서드의 출력')
        console = 식별자 , log = 메소드 (+식별자)
        console 을 찍으면서 나오는 syntax error는 자주 보이니까 기억해두자
         ------문자열
        문자열을 작성할때 '\'string'' > 'string' 으로 나올것이다 
         \n = 줄바꿈 \t 띄어쓰기 \\역슬래시 자체
         문자열 연결 연산 : 문자열 + 문자열
        -------계산(연산)
         7 % 3 = 1 > 7을 3으로 나눴을떄 남은 값
         JS 에서 = 라는 표시는 === 3개를 입력한다!!! 기억!
        
         ----불연산자
         논리 부정 연산자
         !true = false
         ! 뒤에 하나만 오는데 
         단항연산자 : 피연산자  -10
         이항연산자 : 피연산자 두개  10 - 20
         논리 연산자
         논리 합 연산
         연산자: || (또는)
         형태: 불||블 > 적어도 하나만 true면 true
         x < -3 || 2 < x (이차부등식 개념) 열린 범위를 나타낼때
         논리 곱 연산
         연산자: && (또는)
         형태: 불&&블 > 양쪽 모든것이 true여야 전체 값이 true
         -3 < x %% x < 2 (일차함수 개념) 닫힌 범위를 나타낼
         자료형
        `템플릿 문자열`
         `${}` 를 기반으로 중괄호 안에 문자열 값을 자유롭게 표현할수 있다
         ex ) `17 + 23의 값은 ${a+b}입니다.`
         객체
         const person = {
           name : '강승현,
           'raising dog' : '푸들',
           }
         일때 person.'raising dog'가 아니라 person['raising dog'] 로 해야한다
         불리언 연산
        식별자를 상수/변수로 사용하겠다! > 선언 또는 정의
         `식별자 = '자료'` > 할당한다
         처음으로 값을 할당하는 것 > 초기화
        상수 = 기본적,고정적
         const(식별자) = 자료 형태여야한다
         변수 = 변수
         let(식별자) = 자료 형태여야하지만
         최신걸로 업데이트 된다
         복합대입 연산자 ( +=, -=, *=, /=, %= )
         let a = 100
         a += 100  > 200   *복합 연산자는 변수에 만 사용가능하다
         증감 연산자 ( a++ a-- )
        
         undefined 자료형 (
         1. 상수와 변수로 선언하지 않은 식별자 ex) typeof(a)  => "undefined"
         2. 값이 없는 변수 ex) let a typeof(a)  => "undefined"
         문자열 입력 : prompt() 무조건 문자열만 받는다
                      Number() 다른것 > 숫자
                      String() 다른것 > 문자열
                      Boolean() 다른것 > 불            
         NAN 의 타잇은 Number
         불 입력: confirm()
         불 > 문자열
         String(true) > "true"
         String(false) > "false"
         불 > 숫자
         Number(true) > 1     => 켜져있다, 존재한다
         Number(false) > 0    => 꺼져있다, 존재하지않는다
         다른자료형 > 불
         5가지 경우 > false
         0, NaN, "", null, undefiened
         이외의 경우 > tru
